services:
  frontend:
    image: ghcr.io/romanov-km/film-react-nest/frontend:latest
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - frontend-dist:/app/dist
    networks:
      - app-network
    env_file:
      - frontend/.env

  backend:
    image: ghcr.io/romanov-km/film-react-nest/backend:latest
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    networks:
      - app-network
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - backend/.env
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend-dist:/var/www/frontend:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro
    restart: always
    

  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/data
    ports:
      - "5432:5432"  
    volumes:
      - ./prac.init.sql:/docker-entrypoint-initdb.d/prac.init.sql
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 30s

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    networks:
      - app-network
    restart: on-failure
  certbot:
    image: certbot/certbot:latest
    networks:
      - app-network
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw


volumes:
  frontend-dist:
  postgres-data:

networks:
  app-network:
